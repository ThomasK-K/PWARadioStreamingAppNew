FROM node:20-alpine AS build

# Arbeitsverzeichnis im Container erstellen
WORKDIR /app

# Optimierung für Pakete durch Kopieren von package.json und package-lock.json
COPY ./package*.json ./

# Abhängigkeiten installieren
RUN npm ci

# Gesamtes Projekt in den Container kopieren
COPY . .

# Produktions-Build erstellen
RUN npm run build

# Nginx-basiertes Produktions-Image für die Bereitstellung
FROM nginx:stable-alpine AS production

# Verzeichnis für SSL-Zertifikate erstellen
RUN mkdir -p /etc/nginx/ssl

# Kopieren der Nginx-Konfiguration
COPY ./nginx-https.conf /etc/nginx/conf.d/default.conf


# Kopieren der gebauten Anwendung
COPY --from=build /app/dist /usr/share/nginx/html

# Zertifikate kopieren, falls sie bereits existieren
COPY ./ssl/radioapp.crt /etc/nginx/ssl/radioapp.crt
COPY ./ssl/radioapp.key /etc/nginx/ssl/radioapp.key

# Setzen von Berechtigungen für Nginx und SSL-Zertifikate
RUN chown -R nginx:nginx /usr/share/nginx/html && chmod -R 755 /usr/share/nginx/html
RUN chmod 400 /etc/nginx/ssl/radioapp.key && chmod 444 /etc/nginx/ssl/radioapp.crt

# Ports exponieren
EXPOSE 80
EXPOSE 443

# Nginx im Vordergrund starten
CMD ["nginx", "-g", "daemon off;"]
